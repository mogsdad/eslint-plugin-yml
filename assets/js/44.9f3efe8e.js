(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{807:function(t,e,s){"use strict";s.r(e);var a=s(6),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"yml-sort-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yml-sort-keys"}},[t._v("#")]),t._v(" yml/sort-keys")]),t._v(" "),s("blockquote",[s("p",[t._v("require mapping keys to be sorted")])]),t._v(" "),s("ul",[s("li",[t._v("🔧 The "),s("code",[t._v("--fix")]),t._v(" option on the "),s("a",{attrs:{href:"https://eslint.org/docs/user-guide/command-line-interface#fixing-problems",target:"_blank",rel:"noopener noreferrer"}},[t._v("command line"),s("OutboundLink")],1),t._v(" can automatically fix some of the problems reported by this rule.")])]),t._v(" "),s("h2",{attrs:{id:"rule-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-details"}},[t._v("#")]),t._v(" 📖 Rule Details")]),t._v(" "),s("p",[t._v("This rule checks all pair definitions of mapping and verifies that all keys are sorted alphabetically or specified order.")]),t._v(" "),s("eslint-code-block",{attrs:{fix:""}},[s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# eslint yml/sort-keys: 'error'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ✓ GOOD")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("good")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ✗ BAD")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("bad")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" 🔧 Options")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jsonc/sort-keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# For example, a definition for eslintrc")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pathPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ^$ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Hits the root properties")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" root\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" plugins\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" extends\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" env\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" rules\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" overrides\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pathPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ^env$\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" asc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pathPattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ^rules$\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" asc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])]),s("p",[t._v("The option receives multiple objects with the following properties:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("pathPattern")]),t._v(" (Required) ... Defines the regular expression pattern of paths to which you want to enforce the order. If you want to apply to the top level, define "),s("code",[t._v('"^$"')]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("hasProperties")]),t._v(" ... Defines an array of property names. Checks only objects that have the defined properties.")]),t._v(" "),s("li",[s("code",[t._v("order")]),t._v(" (Required) ... Defines how to enforce the order. You can use an object or an array.\n"),s("ul",[s("li",[t._v("Array ... Defines an array of properties to enforce the order.")]),t._v(" "),s("li",[t._v("Object ... The object has the following properties:\n"),s("ul",[s("li",[s("code",[t._v("type")]),t._v(":\n"),s("ul",[s("li",[s("code",[t._v('"asc"')]),t._v(" ... Enforce properties to be in ascending order. This is default.")]),t._v(" "),s("li",[s("code",[t._v('"desc"')]),t._v(" ... Enforce properties to be in descending order.")])])]),t._v(" "),s("li",[s("code",[t._v("caseSensitive")]),t._v(" ... If "),s("code",[t._v("true")]),t._v(", enforce properties to be in case-sensitive order. Default is "),s("code",[t._v("true")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("natural")]),t._v(" ... If "),s("code",[t._v("true")]),t._v(", enforce properties to be in natural order. Default is "),s("code",[t._v("false")]),t._v(".")])])])])]),t._v(" "),s("li",[s("code",[t._v("minKeys")]),t._v(" ... Specifies the minimum number of keys that an object should have in order for the object's unsorted keys to produce an error. Default is "),s("code",[t._v("2")]),t._v(", which means by default all objects with unsorted keys will result in lint errors.")])]),t._v(" "),s("p",[t._v("You can also define options in the same format as the "),s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("sort-keys"),s("OutboundLink")],1),t._v(" rule.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jsonc/sort-keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" error\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" asc\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caseSensitive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("natural")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("minKeys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n")])])]),s("p",[t._v("See "),s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys#options",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(" for details.")]),t._v(" "),s("h2",{attrs:{id:"related-rules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#related-rules"}},[t._v("#")]),t._v(" 👫 Related rules")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("sort-keys"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"version"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[t._v("#")]),t._v(" 🚀 Version")]),t._v(" "),s("p",[t._v("This rule was introduced in eslint-plugin-yml v0.3.0")]),t._v(" "),s("h2",{attrs:{id:"implementation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[t._v("#")]),t._v(" 🔍 Implementation")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-yml/blob/master/src/rules/sort-keys.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rule source"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-yml/blob/master/tests/src/rules/sort-keys.ts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test source"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/ota-meshi/eslint-plugin-yml/tree/master/tests/fixtures/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("Test fixture sources"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("sup",[t._v("Taken with ❤️ "),s("a",{attrs:{href:"https://eslint.org/docs/rules/sort-keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("from ESLint core"),s("OutboundLink")],1)])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);